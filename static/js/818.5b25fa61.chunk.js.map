{"version":3,"file":"static/js/818.5b25fa61.chunk.js","mappings":"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","sources":["webpack://container/./node_modules/@remix-run/router/dist/router.js","webpack://container/./node_modules/react-router/dist/index.js","webpack://container/./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.0.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n\n      if (listener) {\n        listener({\n          action,\n          location: getCurrentLocation()\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location) {\n  return {\n    usr: location.state,\n    key: location.key\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n\n  function handlePop() {\n    action = Action.Pop;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: location\n      });\n    }\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {})); // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    let dataRoute = _extends({}, route, {\n      id,\n      children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n    });\n\n    return dataRoute;\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant(route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    invariant(params[key] != null, \"Missing \\\":\" + key + \"\\\" param\");\n    return params[key];\n  }).replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[@.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n/**\n * @private\n */\n\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : _extends({}, toArg);\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data) {\n    this.pendingKeys = new Set();\n    this.subscriber = undefined;\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nfunction defer(data) {\n  return new DeferredData(data);\n}\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\n\nfunction isRouteErrorResponse(e) {\n  return e instanceof ErrorResponse;\n}\n\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n}; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n\n  let initialScrollRestored = false;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let {\n      matches,\n      route,\n      error\n    } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location\n      } = _ref;\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - This should not be susceptible to false positives for\n    //   loading/submissionRedirect since there would not be actionData in the\n    //   state since the prior action would have returned a redirect response\n    //   and short circuited\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && state.navigation.state === \"loading\"; // Always preserve any existing loaderData from re-used routes\n\n    let newLoaderData = newState.loaderData ? {\n      loaderData: mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [])\n    } : {};\n    updateState(_extends({}, isActionReload ? {} : {\n      actionData: null\n    }, newState, newLoaderData, {\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let location = createLocation(state.location, path, opts && opts.state);\n    let historyAction = (opts && opts.replace) === true || submission != null ? Action.Replace : Action.Push;\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change\n\n\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createRequest(location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation;\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors\n    });\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, result.location)\n      }, submission);\n\n      await startRedirectNavigation(result, redirectNavigation, opts && opts.replace);\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null\n      });\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(_ref2 => {\n        let [key] = _ref2;\n        const fetcher = state.fetchers.get(key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState(_extends({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null\n      }, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(_ref3 => {\n      let [key] = _ref3;\n      return fetchControllers.set(key, pendingNavigationController);\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(_ref4 => {\n      let [key] = _ref4;\n      return fetchControllers.delete(key);\n    }); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (typeof AbortController === \"undefined\") {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, [path, match]);\n    handleFetcherLoader(key, routeId, path, match);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let {\n        error\n      } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location)\n      }, submission);\n\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission);\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(_ref5 => {\n      let [staleKey] = _ref5;\n      return staleKey !== key;\n    }).forEach(_ref6 => {\n      let [staleKey] = _ref6;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(_ref7 => {\n      let [staleKey] = _ref7;\n      return fetchControllers.delete(staleKey);\n    });\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match); // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(redirect, navigation, replace) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    invariant(navigation.location, \"Expected a location on the redirect navigation\"); // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m)), ...fetchersToLoad.map(_ref8 => {\n      let [, href, match] = _ref8;\n      return callLoaderOrAction(\"loader\", createRequest(href, request.signal), match);\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(_ref9 => {\n      let [,, match] = _ref9;\n      return match;\n    }), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    createHref,\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nfunction unstable_createStaticHandler(routes) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to unstable_createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n\n  async function query(request) {\n    let {\n      location,\n      result\n    } = await queryImpl(request);\n\n    if (result instanceof Response) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location\n    }, result);\n  }\n\n  async function queryRoute(request, routeId) {\n    let {\n      result\n    } = await queryImpl(request, routeId);\n\n    if (result instanceof Response) {\n      return result;\n    } // Pick off the right state value to return\n\n\n    let routeData = [result.errors, result.actionData, result.loaderData].find(v => v);\n    let value = Object.values(routeData || {})[0];\n\n    if (isRouteErrorResponse(value)) {\n      return new Response(value.data, {\n        status: value.status,\n        statusText: value.statusText\n      });\n    }\n\n    return value;\n  }\n\n  async function queryImpl(request, routeId) {\n    invariant(request.method !== \"HEAD\", \"query()/queryRoute() do not support HEAD requests\");\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    let {\n      location,\n      matches,\n      shortCircuitState\n    } = matchRequest(request, routeId);\n\n    try {\n      if (shortCircuitState) {\n        return {\n          location,\n          result: shortCircuitState\n        };\n      }\n\n      if (request.method !== \"GET\") {\n        let result = await submit(request, matches, getTargetMatch(matches, location), routeId != null);\n        return {\n          location,\n          result\n        };\n      }\n\n      let result = await loadRouteData(request, matches, routeId != null);\n      return {\n        location,\n        result: _extends({}, result, {\n          actionData: null,\n          actionHeaders: {}\n        })\n      };\n    } catch (e) {\n      if (e instanceof Response) {\n        return {\n          location,\n          result: e\n        };\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      let href = createHref(new URL(request.url));\n      result = getMethodNotAllowedResult(href);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, true, isRouteRequest);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // calLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {}\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, isRouteRequest, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n\n    let context = await loadRouteData(request, matches, isRouteRequest);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, isRouteRequest, pendingActionError) {\n    let matchesToLoad = getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]).filter(m => m.route.loader); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m, true, isRouteRequest))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n\n\n    results.forEach(result => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    }); // Process and commit output from loaders\n\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError);\n    return _extends({}, context, {\n      matches\n    });\n  }\n\n  function matchRequest(req, routeId) {\n    let url = new URL(req.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (matches && routeId) {\n      matches = matches.filter(m => m.route.id === routeId);\n    } // Short circuit with a 404 if we match nothing\n\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        shortCircuitState: {\n          matches: notFoundMatches,\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [route.id]: error\n          },\n          statusCode: 404,\n          loaderHeaders: {},\n          actionHeaders: {}\n        }\n      };\n    }\n\n    return {\n      location,\n      matches\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !(\"formMethod\" in opts) && !(\"formData\" in opts)) {\n    return {\n      path\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: createHref(parsePath(path)),\n        formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n        formData: opts.formData\n      }\n    };\n  } // No formData to flatten for GET submission\n\n\n  if (!opts.formData) {\n    return {\n      path\n    };\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n\n    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n      searchParams.append(\"index\", \"\");\n    }\n\n    parsedPath.search = \"?\" + searchParams;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(400, \"Bad Request\", \"Cannot submit binary form data using GET\")\n    };\n  }\n\n  return {\n    path: createPath(parsedPath)\n  };\n}\n\nfunction getLoaderRedirect(state, redirect) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = state.navigation;\n  let navigation = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined\n  };\n  return navigation;\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : null; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) || // If this route had a pending deferred cancelled it must be revalidated\n  cancelledDeferredRoutes.some(id => id === match.route.id) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult))); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach((_ref10, key) => {\n    let [href, match] = _ref10;\n\n    // This fetcher was cancelled from a prior action submission - force reload\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push([key, href, match]);\n    } else if (isRevalidationRequired) {\n      let shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push([key, href, match]);\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n\n  let defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search || // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate(_extends({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate\n    }));\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, skipRedirects, isRouteRequest) {\n  if (skipRedirects === void 0) {\n    skipRedirects = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params\n    }), abortPromise]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    // Process redirects\n    let status = result.status;\n    let location = result.headers.get(\"Location\"); // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping\n\n    if (isRouteRequest) {\n      throw result;\n    }\n\n    if (status >= 300 && status <= 399 && location != null) {\n      // Don't process redirects in the router during SSR document requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect\n      if (skipRedirects) {\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n\nfunction createRequest(location, signal, submission) {\n  let url = createURL(location).toString();\n  let init = {\n    signal\n  };\n\n  if (submission) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(typeof value === \"string\", 'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' + 'please use \"multipart/form-data\" instead.');\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error\n      }); // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data; // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n      if (result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key,, match] = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  matches.forEach(match => {\n    let id = match.route.id;\n\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getNotFoundMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || r.path === \"\" || r.path === \"/\") || {\n    id: \"__shim-404-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route,\n    error: new ErrorResponse(404, \"Not Found\", null)\n  };\n}\n\nfunction getMethodNotAllowedResult(path) {\n  let href = typeof path === \"string\" ? path : createHref(path);\n  console.warn(\"You're trying to submit to a route that does not have an action.  To \" + \"fix this, please add an `action` function to the route for \" + (\"[\" + href + \"]\"));\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(405, \"Method Not Allowed\", \"No action found for [\" + href + \"]\")\n  };\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n} // Create an href to represent a \"server\" URL without the hash\n\n\nfunction createHref(location) {\n  return (location.pathname || \"\") + (location.search || \"\");\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && !hasNakedIndexQuery(search || \"\")) {\n    return matches.slice(-2)[0];\n  }\n\n  return matches.slice(-1)[0];\n}\n\nfunction createURL(location) {\n  let base = typeof window !== \"undefined\" && typeof window.location !== \"undefined\" ? window.location.origin : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createHref(location);\n  return new URL(href, base);\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_FETCHER, IDLE_NAVIGATION, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, unstable_createStaticHandler, warning };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.4.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, resolveTo, joinPaths, matchPath, warning, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\n// Contexts for data routers\nconst DataStaticRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || !match.route.index && match.pathnameBase !== matches[index - 1].pathnameBase);\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, hookName + \" must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRevalidator must be used within a DataRouterContext\") : invariant(false) : void 0;\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, DataStaticRouterContext as UNSAFE_DataStaticRouterContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.4.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext, useMatches, useNavigation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to);\n  let match = useMatch({\n    path: path.pathname,\n    end,\n    caseSensitive\n  });\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  let nextPath = useResolvedPath(nextLocation || \"\");\n  let nextMatch = React.useMemo(() => nextLocation ? matchPath({\n    path: path.pathname,\n    end,\n    caseSensitive\n  }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  let isPending = nextMatch != null;\n  let isActive = match != null;\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace,\n      relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmitImpl must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action != null ? action : \".\";\n  let path = useResolvedPath(resolvedAction, {\n    relative\n  }); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = state; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning$1","charAt","JSON","stringify","createHref","createPath","push","Push","nextLocation","splice","replace","Replace","go","delta","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","search","hash","usr","createHashHistory","parsePath","substr","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","cond","message","console","warn","Error","e","getHistoryState","current","random","toString","_ref","path","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","handlePop","addEventListener","removeEventListener","historyState","pushState","error","replaceState","ResultType","convertRoutesToDataRoutes","routes","parentPath","allIds","Set","route","treePath","id","join","invariant","has","add","children","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","parentsMeta","forEach","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","_","prefix","__","str","pattern","matcher","paramNames","warning","endsWith","regexpSource","paramName","RegExp","compilePath","captureGroups","memo","splatValue","value","decodeURIComponent","safelyDecodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeys","subscriber","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","done","subscribe","cancel","abort","v","k","resolveData","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","_tracked","isTrackedPromise","_error","_data","defer","redirect","ErrorResponse","statusText","isRouteErrorResponse","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","createRouter","dataRoutes","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getNotFoundMatches","router","pendingNavigationController","initialized","m","loader","hydrationData","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","updateState","newState","completeNavigation","mergeLoaderData","getSavedScrollPosition","async","startNavigation","opts","startUninterruptedRevalidation","userMatches","createUseMatchesMatch","saveScrollPosition","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","pendingActionData","pendingError","request","createRequest","submission","findNearestBoundary","actionOutput","result","interruptActiveLoads","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","getMethodNotAllowedResult","isRedirectResult","redirectNavigation","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","matchesToLoad","revalidatingFetchers","getMatchesToLoad","routeId","fetcher","revalidatingFetcher","_ref3","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","_ref4","findRedirect","getLoaderRedirect","processLoaderData","deferredData","doneKeys","markFetchersDone","markFetchRedirectsDone","abortStaleFetchLoads","handleLoaders","getFetcher","revalidate","redirectHistoryAction","currentMatches","fetchersToLoad","all","_ref8","resolveDeferredResults","_ref9","abortFetcher","setFetcherError","deleteFetcher","keys","doneFetcher","landedId","yeetedKeys","predicate","cancelledRouteIds","dfd","y","initialize","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizeNavigateOptions","fetch","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","_ref5","staleKey","_ref6","_ref7","didAbortFetchLoads","handleFetcherAction","resolveDeferredData","handleFetcherLoader","dispose","clear","_internalFetchControllers","_internalActiveDeferreds","isFetcher","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","append","values","navigationMatches","boundaryId","boundaryMatches","findIndex","getLoaderMatchesUntilBoundary","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","shouldRevalidateLoader","_ref10","includes","isNewRouteInstance","currentPath","currentLocation","currentUrl","createURL","currentParams","nextUrl","nextParams","defaultShouldRevalidate","shouldRevalidate","routeChoice","type","skipRedirects","isRouteRequest","resultType","onReject","handler","contentType","text","statusCode","deferred","method","toUpperCase","body","Request","URLSearchParams","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","hasErrorBoundary","isRevalidatingLoader","unwrap","getAll","handle","origin","URL","is","x","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","shim","createElement","getServerSnapshot","forceUpdate","useSyncExternalStore","DataStaticRouterContext","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useHref","_temp","relative","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","getPathContributingMatches","useNavigate","routePathnamesJson","activeRef","parse","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","_temp2","useRoutes","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorElement","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","style","fontStyle","RenderErrorBoundary","props","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","component","RenderedRoute","routeContext","dataStaticRouterContext","errorElement","_deepestRenderedBoundaryId","dataRouterState","errorIndex","reduceRight","getChildren","element","DataRouterHook","AwaitRenderStatus","useDataRouterState","hookName","useNavigation","UseNavigation","useRevalidator","dataRouterContext","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","thisRoute","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","RouterProvider","fallbackElement","static","Router","Routes","MemoryRouter","historyRef","setState","Navigate","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","createRoutesFromChildren","Await","AwaitErrorBoundary","ResolveAwait","neverSettledPromise","pending","renderError","success","renderMatches","enhanceManualRouteObjects","routeClone","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_excluded","_excluded2","_excluded3","createBrowserRouter","_window","__staticRouterHydrationData","createHashRouter","_window2","BrowserRouter","HashRouter","HistoryRouter","Link","ref","onClick","reloadDocument","rest","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","className","ariaCurrentProp","classNameProp","styleProp","routerState","nextPath","isPending","isActive","ariaCurrent","Boolean","Form","FormImpl","forwardedRef","onSubmit","fetcherKey","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","storageKey","_temp3","callback","scrollRestoration","scrollY","sessionStorage","setItem","SCROLL_RESTORATION_STORAGE_KEY","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","defaultAction","encType","submissionTrigger","FormData","name","isButtonElement","isInputElement","form","protocol","host","getFormSubmissionInfo","fetcherId","useFetcher","_route$matches","String","createFetcherForm","load","fetcherWithComponents","useFetchers"],"sourceRoot":""}